name: Tests

on:
  push:
    branches: [ "main", "actions/**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  selenium_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set up directories
        run: |
          mkdir tests sources sources/frontend sources/backend sources/db
      - name: "[Database] Checkout code"
        run: |
          git clone https://github.com/DevOps-2023-TeamA/tsao-db.git sources/db
        working-directory: ${{ github.workspace }}
      - name: "[Database] Setup MySQL"
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql root password: root
          mysql database: user
          mysql user: root 
          mysql password: root
      - name: "[Database] Wait for MySQL"
        run: sleep 10
      - name: "[Database] Create Tables"
        run: |
          mysql --protocol=TCP -h localhost -P 3306 --user=root --password=root user < sources/db/create_table.sql
      - name: "[Database] Insert Sample Data"
        run: |
          mysql --protocol=TCP -h localhost -P 3306 --user=root --password=root user < sources/db/insert_data.sql
      - name: "[Backend] Checkout code"
        run: |
          git clone https://github.com/DevOps-2023-TeamA/tsao-backend-svc.git sources/backend
        working-directory: ${{ github.workspace }}
      - name: "[Backend] Setup Go environment"
        uses: actions/setup-go@v5.0.0
        with:
          go-version: '1.21'
      - name: "[Backend] Set up .env file"
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          cd sources/backend
          echo "SECRET_KEY=$SECRET_KEY" > .env
          ls
        working-directory: ${{ github.workspace }}
      - name: "[Backend] Deploy Auth Microservice"
        run: |
          cd sources/backend
          go run microservices/auth/*.go -sql "root:root@tcp(127.0.0.1:3306)/tsao" &
        working-directory: ${{ github.workspace }}
      - name: "[Backend] Deploy Accounts Microservice"
        run: |
          cd sources/backend
          go run microservices/accounts/*.go -sql "root:root@tcp(127.0.0.1:3306)/tsao" &
        working-directory: ${{ github.workspace }}
      - name: "[Backend] Deploy Records Microservice"
        run: |
          cd sources/backend
          go run microservices/records/*.go -sql "root:root@tcp(127.0.0.1:3306)/tsao" &
        working-directory: ${{ github.workspace }}
      - name: "[Backend] Wait for Backend Setup"
        run: sleep 5
      - name: "[Frontend] Checkout code"
        uses: actions/checkout@v2
        with:
          path: sources/frontend
      - name: "[Frontend] Deploy site on localhost"
        run: |
          cd sources/frontend
          python -m http.server 8080 &
          
          sleep 5
        working-directory: ${{ github.workspace }}
      - name: "[Testing] Retrieve tests"
        run: |
          git clone https://github.com/DevOps-2023-TeamA/tsao-tests.git tests/alltests
          cp -r tests/alltests/frontend/* tests
        working-directory: ${{ github.workspace }}
      - name: "[Testing] Install Robot Framework and SeleniumLibrary"
        run: |
          pip install robotframework
          pip install robotframework-seleniumlibrary
        working-directory: ${{ github.workspace }}

      - name: "[Testing] Run Chrome Robot Framework Tests"
        run: |
          for file in tests/*.robot; do
            if [ -f "$file" ]; then
              echo "Result of $file"
              robot -v BROWSER:chrome --outputdir results/ $file
              echo "-----------------------------------"
            fi
          done
        working-directory: ${{ github.workspace }}
      # - name: Install Firefox
      #   uses: browser-actions/setup-firefox@latest
      # - name: Install Geckodriver
      #   uses: browser-actions/setup-geckodriver@latest
      #   with:
      #     geckodriver-version: '0.34.0'
      # - name: Run Firefox Robot Framework Tests
      #   run: |
      #     robot -v BROWSER:firefox tests/test.robot
      #   working-directory: ${{ github.workspace }}
      - name: "[Testing] Upload Selenium Artifacts"
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: selenium-artifacts
          path: results/
      - name: "[Lighthouse] Set up Node"
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: "[Lighthouse] Install Lighthouse"
        run: |
          npm install -g @lhci/cli@0.13.x
      - name: Run Lighthouse CI
        run: lhci autorun --config=./sources/frontend/.lighthouserc.json
        env:
          LHCI_GITHUB_APP_TOKEN: $

      - name: "[Testing] Setup Node.js environment"
        uses: actions/setup-node@v4.0.1

      - name: "[Testing] Install dependencies"
        run: |
          cd sources/frontend
          npm install 
        working-directory: ${{ github.workspace }}

      - name: "[Testing] Run Test Cases"
        run: |
          npm test
          mkdir -p jest-artifacts
          mv ./coverage ./jest-artifacts/coverage
          mv ./test-results.json ./jest-artifacts/test-results.json
        working-directory: ${{ github.workspace }}

      - name: "[Testing] Upload Artifacts"
        uses: actions/upload-artifact@v2
        with:
          name: jest-artifacts
          path: jest-artifacts
